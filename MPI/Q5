%%sh
cat > hello.c << EOF
#include <stdio.h>
#include <string.h>
#include <mpi.h>
#include <stdbool.h>
#include<stdlib.h>


int main(int argc, char *argv[]) {
    MPI_Init(&argc,&argv);
    int rank,size;
    MPI_Comm_size(MPI_COMM_WORLD,&size);
    MPI_Comm_rank(MPI_COMM_WORLD,&rank);
    
    int *numbers = NULL;
    if (rank == 0)
    {
        numbers = (int*)malloc(sizeof(int)*size);
        // Initialize some values
        for (int i=0;i<size;i++)
        {
            numbers[i] = i;
        }
    }
    // Creation of buffer
    
    int buffer_size = MPI_BSEND_OVERHEAD + size*sizeof(int);
    void *buffer = malloc(buffer_size);
    MPI_Buffer_attach(buffer,buffer_size);
    
    if (rank ==0 )
    {
        for(int i=1;i<size;i++)
        {
            MPI_Bsend(&numbers[i],1,MPI_INT,i,0,MPI_COMM_WORLD);
        }
    }
    int received;
    if (rank !=0 )
    {
        MPI_Recv(&received,1,MPI_INT,0,0,MPI_COMM_WORLD,MPI_STATUS_IGNORE);
        if (rank %2 == 0)
        {
            printf("Received values in process %d are %d \n",rank,received*received);
        }
        else
        {
            printf("Received values in process %d are %d \n",rank,received*received*received);
        }
    }
    
    
    MPI_Finalize();
    return 0;
}
EOF
ls -l
